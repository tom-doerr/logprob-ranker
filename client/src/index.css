@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --eva-orange: #ff6700;
    --eva-orange-dark: #c25200;
    --eva-blue: #00a3d9;
    --eva-purple: #6f00ff;
    --eva-green: #00ff66;
    --eva-red: #ff0000;
    --eva-black: #080808;
    --eva-dark: #121212;
    --eva-text: #dedede;
    --eva-green-bg: rgba(0, 255, 102, 0.15);
  }

  * {
    @apply border-border;
  }

  body {
    @apply bg-[#121212] text-foreground antialiased font-mono;
    font-family: 'Share Tech Mono', monospace;
    background-color: #080808;
    background-image: 
      linear-gradient(to right, rgba(255, 103, 0, 0.07) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(0, 163, 217, 0.07) 1px, transparent 1px),
      radial-gradient(circle at 50% 25%, rgba(255, 103, 0, 0.1) 0%, transparent 40%);
    background-size: 20px 20px, 20px 20px, 100% 100%;
    color: var(--eva-text, #dedede);
  }
}

@layer components {
  .eva-card {
    @apply relative overflow-hidden;
    border: 1px solid var(--eva-orange);
    box-shadow: 0 0 8px rgba(255, 103, 0, 0.5);
  }

  .eva-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: var(--eva-orange);
  }

  .eva-title {
    @apply font-mono text-[var(--eva-orange)] uppercase tracking-wide;
    text-shadow: 0 0 5px rgba(255, 103, 0, 0.7);
  }

  .eva-button {
    @apply font-mono uppercase tracking-wider;
    border: 1px solid var(--eva-orange);
    background: rgba(255, 103, 0, 0.1);
    box-shadow: 0 0 5px rgba(255, 103, 0, 0.3);
    transition: all 0.2s ease;
  }

  .eva-button:hover {
    background: rgba(255, 103, 0, 0.2);
    box-shadow: 0 0 10px rgba(255, 103, 0, 0.5);
  }

  .eva-input {
    @apply font-mono text-sm;
    border: 1px solid var(--eva-blue);
    background: rgba(0, 0, 0, 0.7);
    box-shadow: 0 0 5px rgba(0, 163, 217, 0.3) inset;
  }

  .eva-progress {
    height: 10px;
    background: var(--eva-black);
    border: 1px solid var(--eva-orange);
    overflow: hidden;
  }

  .eva-progress-value {
    height: 100%;
    background: var(--eva-orange);
    transition: width 0.3s ease;
  }

  .eva-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;
  }

  .eva-terminal {
    font-family: 'Share Tech Mono', monospace;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--eva-blue);
    padding: 1rem;
    color: #00ff66;
    text-shadow: 0 0 5px rgba(0, 255, 102, 0.7);
  }

  .eva-separator {
    height: 1px;
    background: linear-gradient(to right, 
      transparent, 
      var(--eva-orange), 
      transparent
    );
  }
}

@layer utilities {
  .animation-delay-500 {
    animation-delay: 500ms !important;
  }
  
  .animation-delay-1000 {
    animation-delay: 1000ms !important;
  }
  
  .animation-delay-1500 {
    animation-delay: 1500ms !important;
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  
  /* NGE/NERV UI Animations */
  @keyframes scanline {
    0% {
      transform: translateY(-100%);
    }
    100% {
      transform: translateY(100vh);
    }
  }

  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.6; }
  }

  @keyframes progressBar {
    0% { width: 0; }
    50% { width: 100%; }
    100% { width: 0; }
  }
  
  @keyframes dataScroll {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }
  
  @keyframes energyFlux {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes terminalType {
    from { width: 0; }
    to { width: 100%; }
  }
  
  @keyframes glitch {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
    100% { transform: translate(0); }
  }
  
  @keyframes nerv-scan {
    0% { background-position: 0 0; }
    100% { background-position: 0 100vh; }
  }
  
  /* Globe animation keyframes */
  @keyframes globe-spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  @keyframes globe-spin-reverse {
    from { transform: rotate(0deg); }
    to { transform: rotate(-360deg); }
  }
  
  @keyframes globe-spin-slow {
    from { transform: rotate(0deg); }
    to { transform: rotate(120deg); }
  }
  
  /* NERV UI Classes */
  .nerv-scanline {
    position: relative;
    overflow: hidden;
  }

  .nerv-scanline::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 6px;
    background: linear-gradient(90deg, 
      transparent, 
      rgba(255, 103, 0, 0.5), 
      transparent);
    opacity: 0.7;
    z-index: 9;
    pointer-events: none;
    animation: scanline 3s linear infinite;
  }
  
  .nerv-blink {
    animation: blink 2s infinite;
  }
  
  .nerv-pulse {
    animation: hexagonPulse 3s infinite ease-in-out;
  }
  
  .nerv-progress {
    position: relative;
    overflow: hidden;
  }
  
  .nerv-progress::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--eva-orange), var(--eva-blue));
    animation: progressBar 5s ease-in-out infinite;
    z-index: 5;
  }
  
  .nerv-data {
    position: relative;
    overflow: hidden;
  }
  
  .nerv-data::after {
    content: "01010010100101001010101001010010101000101010101001010";
    position: absolute;
    color: var(--eva-blue);
    opacity: 0.2;
    font-size: 0.6rem;
    white-space: nowrap;
    animation: dataScroll 20s linear infinite;
  }
  
  .nerv-energy {
    background: linear-gradient(90deg, 
      rgba(255, 103, 0, 0.3),
      rgba(0, 163, 217, 0.3),
      rgba(255, 103, 0, 0.3));
    background-size: 200% 100%;
    animation: energyFlux 5s infinite;
  }
  
  .nerv-type {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--eva-orange);
    animation: terminalType 2s steps(40, end), blink 1s step-end infinite;
  }
  
  .nerv-glitch {
    animation: glitch 0.5s linear infinite;
    animation-play-state: paused;
  }
  
  .nerv-glitch:hover {
    animation-play-state: running;
  }
  
  .nerv-scan {
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.15),
      rgba(0, 0, 0, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    animation: nerv-scan 10s linear infinite;
    pointer-events: none;
  }
  
  /* NERV Globe Animations */
  .nerv-globe-spin {
    animation: globe-spin 30s linear infinite;
  }
  
  .nerv-globe-spin-reverse {
    animation: globe-spin-reverse 20s linear infinite;
  }
  
  .nerv-globe-spin-slow {
    animation: globe-spin-slow 25s linear infinite;
  }
}